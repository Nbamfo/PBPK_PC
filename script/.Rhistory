eno <- data.frame(rep_pred = unlist(eno_pksim), swap_pred = unlist(eno_RR)) %>%
mutate(Drug_class = "Zwitterion")
# Bind all the outputs together
drug_all_pksim <- rbind(met,ace,vori,alp,thio,phen,dig,etho,oflo,eno)
# Calculate the Pearson correlation coefficient
corr_coeff_pksim <- round(cor(drug_all_pksim$rep_pred,drug_all_pksim$swap_pred,method='pearson'), digits=2)
corr_coeff_pksim <- paste("italic(r) %~~%", corr_coeff_pksim)
fig3d <- ggplot() +
geom_point(data=drug_all_pksim, aes(x=swap_pred, y=rep_pred, shape=Drug_class), size=3) +
scale_shape_discrete(solid=F) +
geom_abline(intercept = 0, slope = 1) +
xlim(0,max(drug_all_pksim[1:2])) +
ylim(0,max(drug_all_pksim[1:2])) +
xlab("Predicted Kp (RR tissue comp.)") +
ylab("Predicted Kp (reported tissue comp.") +
ggtitle("d    PK-Sim with RR tissue comp.") +
theme(legend.title =  element_blank()) +
th1 +
geom_text(aes(x=max(drug_all_pksim[1:2])*pcc_x, y=max(drug_all_pksim[1:2])*pcc_y, label=corr_coeff_pksim), parse=TRUE)
fig3 <- grid.arrange(fig3a, fig3b, fig3c, fig3d, ncol=2, nrow=2)
# General function to calculate Kp values for tissues in both unified and reported physiologies
drug_pred <- function(logP, pKa, fup, BP, type, dat_uni, dat_method, method){
if(method=="P&T"){
uni <- calcKp_PT(logP, pKa, fup, BP, type, dat_uni)        #prediction using unified tissue composition
pred <- calcKp_PT(logP, pKa, fup, BP, type, dat_method)    #prediction using reported tissue composition
pred <- c(pred[1:3], pred[5:6], pred[4], pred[7:9], pred[11], pred[10])
}
else if(method=="Berezhkovskiy"){
uni <- calcKp_Berez(logP, pKa, fup, BP, type, dat_uni)     #prediction using unified tissue composition
pred <- calcKp_Berez(logP, pKa, fup, BP, type, dat_method) #prediction using reported tissue composition
pred <- c(pred[1:3], pred[5:6], pred[4], pred[7:9], pred[11], pred[10])
}
else if(method=="R&R"){
uni <- calcKp_RR(logP, pKa, fup, BP, type, dat_uni)        #prediction using unified tissue composition
pred <- calcKp_RR(logP, pKa, fup, BP, type, dat_method)    #prediction using reported tissue composition
pred <- c(pred[1:3],pred[5:6],pred[4],pred[7:9],pred[11:12])
}
else if(method=="Schmitt"){
uni <- calcKp_Schmitt(logP, pKa, fup, type, dat_uni)       #prediction using unified tissue composition
pred <- calcKp_Schmitt(logP, pKa, fup, type, dat_method)   #prediction using PK-Sim reported tissue composition
pred <- c(pred[3], pred[1:2], pred[4:6], pred[9:11], pred[13:14])
}
else if(method=="Schmitt2"){
uni <- calcKp_Schmitt(logP, pKa, fup, type, dat_uni)       #prediction using unified tissue composition
pred <- calcKp_Schmitt(logP, pKa, fup, type, dat_method)   #prediction using reported tissue composition
pred <- c(pred[1:3], pred[5:6], pred[4],pred[7:11])
}
else if(method=="PK-Sim"){
uni <- calcKp_pksim(logP, fup, dat_uni)                    #prediction using unified tissue composition
pred <- calcKp_pksim(logP, fup, dat_method)                #prediction using reported tissue composition
pred <- c(pred[3], pred[1:2], pred[4:6], pred[9:11], pred[13:14])
}
drug_vals <- data.frame(uni_pred = unlist(uni),pred = unlist(pred))
return(drug_vals)
}
# General function to calculate Kp values for tissues in both unified and reported physiologies
drug_pred <- function(logP, pKa, fup, BP, type, dat_uni, dat_method, method){
if(method=="P&T"){
uni <- calcKp_PT(logP, pKa, fup, BP, type, dat_uni)        #prediction using unified tissue composition
pred <- calcKp_PT(logP, pKa, fup, BP, type, dat_method)    #prediction using reported tissue composition
pred <- c(pred[1:3], pred[5:6], pred[4], pred[7:9], pred[11], pred[10])
}
else if(method=="Berezhkovskiy"){
uni <- calcKp_Berez(logP, pKa, fup, BP, type, dat_uni)     #prediction using unified tissue composition
pred <- calcKp_Berez(logP, pKa, fup, BP, type, dat_method) #prediction using reported tissue composition
pred <- c(pred[1:3], pred[5:6], pred[4], pred[7:9], pred[11], pred[10])
}
else if(method=="R&R"){
uni <- calcKp_RR(logP, pKa, fup, BP, type, dat_uni)        #prediction using unified tissue composition
pred <- calcKp_RR(logP, pKa, fup, BP, type, dat_method)    #prediction using reported tissue composition
pred <- c(pred[1:3],pred[5:6],pred[4],pred[7:9],pred[11:12])
}
else if(method=="Schmitt"){
uni <- calcKp_Schmitt(logP, pKa, fup, type, dat_uni)       #prediction using unified tissue composition
pred <- calcKp_Schmitt(logP, pKa, fup, type, dat_method)   #prediction using PK-Sim reported tissue composition
pred <- c(pred[3], pred[1:2], pred[4:6], pred[9:11], pred[13:14])
}
else if(method=="Schmitt2"){
uni <- calcKp_Schmitt(logP, pKa, fup, type, dat_uni)       #prediction using unified tissue composition
pred <- calcKp_Schmitt(logP, pKa, fup, type, dat_method)   #prediction using reported tissue composition
pred <- c(pred[1:3], pred[5:6], pred[4],pred[7:11])
}
else if(method=="PK-Sim"){
uni <- calcKp_pksim(logP, fup, dat_uni)                    #prediction using unified tissue composition
pred <- calcKp_pksim(logP, fup, dat_method)                #prediction using reported tissue composition
pred <- c(pred[3], pred[1:2], pred[4:6], pred[9:11], pred[13:14])
}
drug_vals <- data.frame(uni_pred = unlist(uni),pred = unlist(pred))
return(drug_vals)
}
# Define location of Pearson correlation coef. on every plot (fraction of maximum x and y value f plot)
pcc_x <- 0.75
pcc_y <- 0.35
### Strong Base ###
#Metoprolol
met <- drug_pred(2.15, 9.7, 0.8, BP=1.52, type=3, dat_uni, dat_PT, "P&T") %>%
mutate(Drug_class = "Strong base")
# Acebutolol-R
ace <- drug_pred(1.4, 9.7, 0.79, BP=1, type=3, dat_uni, dat_PT, "P&T") %>%
mutate(Drug_class = "Strong base")
### Weak Base ###
# Voriconazole
vori <- drug_pred(2.56, 1.76, 0.42, BP=1, type=3, dat_uni, dat_PT, "P&T") %>%
mutate(Drug_class = "Weak base")
#Alprazolam
alp <- drug_pred(2.5, 2.4, 0.35, BP=1, type=3, dat_uni, dat_PT, "P&T") %>%
mutate(Drug_class = "Weak base")
### Acid ###
# Thiopental
thio <- drug_pred(2.9, 7.5, 0.13, BP=1, type=2, dat_uni, dat_PT, "P&T") %>%
mutate(Drug_class = "Acid")
# Phenobarbital
phen <- drug_pred(0.8, 7.35, 0.78, BP=1, type=2, dat_uni, dat_PT, "P&T") %>%
mutate(Drug_class = "Acid")
### Neutral ###
# Digoxin
dig <- drug_pred(1.48, 0, 0.87, BP=1, type=1, dat_uni, dat_PT, "P&T") %>%
mutate(Drug_class = "Neutral")
# Ethoxybenzamide
etho <- drug_pred(0.77, 0, 0.5, BP=1, type=1, dat_uni, dat_PT, "P&T") %>%
mutate(Drug_class = "Neutral")
### Zwitterion ###
# Ofloxacin
oflo <- drug_pred(-0.4, c(5.97,9.28), 0.77, BP=0.92, type=6, dat_uni, dat_PT, "P&T") %>%
mutate(Drug_class = "Zwitterion")
#Enoxacin
eno <- drug_pred(0.1, c(6.1,8.7), 0.66, BP=0.94, type=6, dat_uni, dat_PT, "P&T") %>%
mutate(Drug_class = "Zwitterion")
# Bind all the outputs together
drug_all_PT <- rbind(met,ace,vori,alp,thio,phen,dig,etho,oflo,eno)
# Calculate the Pearson correlation coefficient
corr_coeff_PT <- round(cor(drug_all_PT$uni_pred,drug_all_PT$pred,method='pearson'), digits=2)
corr_coeff_PT <- paste("italic(r) %~~%", corr_coeff_PT)
fig4a <- ggplot() +
geom_point(data=drug_all_PT, aes(x=uni_pred, y=pred, shape=Drug_class), size=3) +
scale_shape_discrete(solid=F) +
geom_abline(intercept = 0, slope = 1) +
xlim(0,max(drug_all_PT[1:2])) +
ylim(0,max(drug_all_PT[1:2])) +
xlab("Predicted Kp (unified tissue composition)") +
ylab("Predicted Kp (reported tissue composition)") +
ggtitle("a    PT") +
theme(legend.title =  element_blank()) +
th1 +
geom_text(aes(x=max(drug_all_PT[1:2])*pcc_x, y=max(drug_all_PT[1:2])*pcc_y, label=corr_coeff_PT), parse=TRUE)
fig4a
met <- drug_pred(2.15, 9.7, 0.8, BP=1.52, type=3, dat_uni, dat_PT, "Berezhkovskiy") %>%
mutate(Drug_class = "Strong base")
# Acebutolol-R
ace <- drug_pred(1.4, 9.7, 0.79, BP=1, type=3, dat_uni, dat_PT, "Berezhkovskiy") %>%
mutate(Drug_class = "Strong base")
### Weak Base ###
# Voriconazole
vori <- drug_pred(2.56, 1.76, 0.42, BP=1, type=3, dat_uni, dat_PT, "Berezhkovskiy") %>%
mutate(Drug_class = "Weak base")
#Alprazolam
alp <- drug_pred(2.5, 2.4, 0.35, BP=1, type=3, dat_uni, dat_PT, "Berezhkovskiy") %>%
mutate(Drug_class = "Weak base")
### Acid ###
# Thiopental
thio <- drug_pred(2.9, 7.5, 0.13, BP=1, type=2, dat_uni, dat_PT, "Berezhkovskiy") %>%
mutate(Drug_class = "Acid")
# Phenobarbital
phen <- drug_pred(0.8, 7.35, 0.78, BP=1, type=2, dat_uni, dat_PT, "Berezhkovskiy") %>%
mutate(Drug_class = "Acid")
### Neutral ###
# Digoxin
dig <- drug_pred(1.48, 0, 0.87, BP=1, type=1, dat_uni, dat_PT, "Berezhkovskiy") %>%
mutate(Drug_class = "Neutral")
# Ethoxybenzamide
etho <- drug_pred(0.77, 0, 0.5, BP=1, type=1, dat_uni, dat_PT, "Berezhkovskiy") %>%
mutate(Drug_class = "Neutral")
### Zwitterion ###
# Ofloxacin
oflo <- drug_pred(-0.4, c(5.97,9.28), 0.77, BP=0.92, type=6, dat_uni, dat_PT, "Berezhkovskiy") %>%
mutate(Drug_class = "Zwitterion")
#Enoxacin
eno <- drug_pred(0.1, c(6.1,8.7), 0.66, BP=0.94, type=6, dat_uni, dat_PT, "Berezhkovskiy") %>%
mutate(Drug_class = "Zwitterion")
# Bind all the outputs together
drug_all_Berez <- rbind(met,ace,vori,alp,thio,phen,dig,etho,oflo,eno)
# Calculate the Pearson correlation coefficient
corr_coeff_Berez <- round(cor(drug_all_Berez$uni_pred,drug_all_Berez$pred,method='pearson'),digits=2)
corr_coeff_Berez <- paste("italic(r) %~~%", corr_coeff_Berez)
fig4b <- ggplot() +
geom_point(data=drug_all_Berez, aes(x=uni_pred, y=pred, shape=Drug_class), size=3) +
scale_shape_discrete(solid=F) +
geom_abline(intercept = 0, slope = 1) +
xlim(0,max(drug_all_Berez[1:2])) +
ylim(0,max(drug_all_Berez[1:2])) +
xlab("Predicted Kp (unified tissue composition)") +
ylab("Predicted Kp (reported tissue composition)") +
ggtitle("b    Berez") +
theme(legend.title =  element_blank()) +
th1 +
geom_text(aes(x=max(drug_all_Berez[1:2])*pcc_x, y=max(drug_all_Berez[1:2])*pcc_y, label=corr_coeff_Berez), parse=TRUE)
# Rodgers and Rowland method
# uni output order: adipose, bone, brain, heart, kidney, gut, liver, lung, muscle, skin, spleen
# pred output order: adipose, bone, brain, gut, heart, kidney liver, lung, muscle, pancreas, skin, spleen, thymus
### Strong Base ###
#Metoprolol
met <- drug_pred(2.15, 9.7, 0.8, BP=1.52, type=3, dat_uni, dat_RR, "R&R") %>%
mutate(Drug_class = "Strong base")
# Acebutolol-R
ace <- drug_pred(1.4, 9.7, 0.79, BP=1, type=3, dat_uni, dat_RR, "R&R") %>%
mutate(Drug_class = "Strong base")
### Weak Base ###
# Voriconazole
vori <- drug_pred(2.56, 1.76, 0.42, BP=1, type=3, dat_uni, dat_RR, "R&R") %>%
mutate(Drug_class = "Weak base")
#Alprazolam
alp <- drug_pred(2.5, 2.4, 0.35, BP=1, type=3, dat_uni, dat_RR, "R&R") %>%
mutate(Drug_class = "Weak base")
### Acid ###
# Thiopental
thio <- drug_pred(2.9, 7.5, 0.13, BP=1, type=2, dat_uni, dat_RR, "R&R") %>%
mutate(Drug_class = "Acid")
# Phenobarbital
phen <- drug_pred(0.8, 7.35, 0.78, BP=1, type=2, dat_uni, dat_RR, "R&R") %>%
mutate(Drug_class = "Acid")
### Neutral ###
# Digoxin
dig <- drug_pred(1.48, 0, 0.87, BP=1, type=1, dat_uni, dat_RR, "R&R") %>%
mutate(Drug_class = "Neutral")
# Ethoxybenzamide
etho <- drug_pred(0.77, 0, 0.5, BP=1, type=1, dat_uni, dat_RR, "R&R") %>%
mutate(Drug_class = "Neutral")
### Zwitterion ###
# Ofloxacin
oflo <- drug_pred(-0.4, c(5.97,9.28), 0.77, BP=0.92, type=6, dat_uni, dat_RR, "R&R") %>%
mutate(Drug_class = "Zwitterion")
# Enoxacin
eno <- drug_pred(0.1, c(6.1,8.7), 0.66, BP=0.94, type=6, dat_uni, dat_RR, "R&R") %>%
mutate(Drug_class = "Zwitterion")
# Bind all the outputs together
drug_all_RR <- rbind(met,ace,vori,alp,thio,phen,dig,etho,oflo,eno)
# Calculate the Pearson correlation coefficient
corr_coeff_RR <- round(cor(drug_all_RR$uni_pred,drug_all_RR$pred,method='pearson'), digits=2)
corr_coeff_RR <- paste("italic(r) %~~%", corr_coeff_RR)
fig4c <- ggplot() +
geom_point(data=drug_all_RR, aes(x=uni_pred, y=pred, shape=Drug_class), size=3) +
scale_shape_discrete(solid=F) +
geom_abline(intercept = 0, slope = 1) +
xlim(0,max(drug_all_RR[1:2])) +
ylim(0,max(drug_all_RR[1:2])) +
xlab("Predicted Kp (unified tissue composition)") +
ylab("Predicted Kp (reported tissue composition)") +
ggtitle("c   RR") +
theme(legend.title =  element_blank()) +
th1 +
geom_text(aes(x=max(drug_all_RR[1:2])*pcc_x, y=max(drug_all_RR[1:2])*pcc_y, label=corr_coeff_RR), parse=TRUE)
# Schmitt method
# uni output order: adipose, bone, brain, heart, kidney, gut, liver, lung, muscle, skin, spleen
# pred output order: adipose, bone, brain, gut, heart, kidney, liver, lung, muscle, skin, spleen, testes, RBCs
### Strong Base ###
# Metoprolol
met <- drug_pred(2.15, 9.7, 0.8, BP=1.52, type=3, dat_uni, dat_Schmitt, "Schmitt") %>%
mutate(Drug_class = "Strong base")
# Acebutolol-R
ace <- drug_pred(1.4, 9.7, 0.79, BP=1, type=3, dat_uni, dat_Schmitt, "Schmitt") %>%
mutate(Drug_class = "Strong base")
### Weak Base ###
# Voriconazole
vori <- drug_pred(2.56, 1.76, 0.42, BP=1, type=3, dat_uni, dat_Schmitt, "Schmitt") %>%
mutate(Drug_class = "Weak base")
#Alprazolam
alp <- drug_pred(2.5, 2.4, 0.35, BP=1, type=3, dat_uni, dat_Schmitt, "Schmitt") %>%
mutate(Drug_class = "Weak base")
### Acid ###
# Thiopental
thio <- drug_pred(2.9, 7.5, 0.13, BP=1, type=2, dat_uni, dat_Schmitt, "Schmitt") %>%
mutate(Drug_class = "Acid")
# Phenobarbital
phen <- drug_pred(0.8, 7.35, 0.78, BP=1, type=2, dat_uni, dat_Schmitt, "Schmitt") %>%
mutate(Drug_class = "Acid")
### Neutral ###
# Digoxin
dig <- drug_pred(1.48, 0, 0.87, BP=1, type=1, dat_uni, dat_Schmitt, "Schmitt") %>%
mutate(Drug_class = "Neutral")
# Ethoxybenzamide
etho <- drug_pred(0.77, 0, 0.5, BP=1, type=1, dat_uni, dat_Schmitt, "Schmitt") %>%
mutate(Drug_class = "Neutral")
### Zwitterion ###
# Ofloxacin
oflo <- drug_pred(-0.4, c(5.97,9.28), 0.77, BP=0.92, type=6, dat_uni, dat_Schmitt, "Schmitt") %>%
mutate(Drug_class = "Zwitterion")
#Enoxacin
eno <- drug_pred(0.1, c(6.1,8.7), 0.66, BP=0.94, type=6, dat_uni, dat_Schmitt, "Schmitt") %>%
mutate(Drug_class = "Zwitterion")
# Bind all the outputs together
drug_all_schmitt <- rbind(met,ace,vori,alp,thio,phen,dig,etho,oflo,eno)
# Calculate the Pearson correlation coefficient
corr_coeff_Schmitt <- round(cor(drug_all_schmitt$uni_pred,drug_all_schmitt$pred,method='pearson'), digits=2)
corr_coeff_Schmitt <- paste("italic(r) %~~%", corr_coeff_Schmitt)
fig4d <- ggplot() +
geom_point(data=drug_all_schmitt, aes(x=uni_pred, y=pred, shape=Drug_class), size=3) +
scale_shape_discrete(solid=F) +
geom_abline(intercept = 0, slope = 1) +
xlim(0,max(drug_all_schmitt[1:2])) +
ylim(0,max(drug_all_schmitt[1:2])) +
xlab("Predicted Kp (unified tissue composition)") +
ylab("Predicted Kp (reported tissue composition)") +
ggtitle("d   Schmitt") +
theme(legend.title =  element_blank()) +
th1 +
geom_text(aes(x=max(drug_all_schmitt[1:2])*pcc_x, y=max(drug_all_schmitt[1:2])*pcc_y, label=corr_coeff_Schmitt), parse=TRUE)
#PK-Sim standard method
# uni output order: adipose, bone, brain, heart, kidney, gut, liver, lung, muscle, skin, spleen
# pred output order: bone, brain, adipose, heart, kidney, stomach, small intestine, large intestine, liver, lung, muscle, pancreas, skin, spleen
### Strong Base ###
# Metoprolol
met <- drug_pred(2.15, 9.7, 0.8, BP=1.52, type=3, dat_uni, dat_pksim, "PK-Sim") %>%
mutate(Drug_class = "Strong base")
# Acebutolol-R
ace <- drug_pred(1.4, 9.7, 0.79, BP=1, type=3, dat_uni, dat_pksim, "PK-Sim") %>%
mutate(Drug_class = "Strong base")
### Weak Base ###
# Voriconazole
vori <- drug_pred(2.56, 1.76, 0.42, BP=1, type=3, dat_uni, dat_pksim, "PK-Sim") %>%
mutate(Drug_class = "Weak base")
#Alprazolam
alp <- drug_pred(2.5, 2.4, 0.35, BP=1, type=3, dat_uni, dat_pksim, "PK-Sim") %>%
mutate(Drug_class = "Weak base")
### Acid ###
# Thiopental
thio <- drug_pred(2.9, 7.5, 0.13, BP=1, type=2, dat_uni, dat_pksim, "PK-Sim") %>%
mutate(Drug_class = "Acid")
# Phenobarbital
phen <- drug_pred(0.8, 7.35, 0.78, BP=1, type=2, dat_uni, dat_pksim, "PK-Sim") %>%
mutate(Drug_class = "Acid")
### Neutral ###
# Digoxin
dig <- drug_pred(1.48, 0, 0.87, BP=1, type=1, dat_uni, dat_pksim, "PK-Sim") %>%
mutate(Drug_class = "Neutral")
# Ethoxybenzamide
etho <- drug_pred(0.77, 0, 0.5, BP=1, type=1, dat_uni, dat_pksim, "PK-Sim") %>%
mutate(Drug_class = "Neutral")
### Zwitterion ###
# Ofloxacin
oflo <- drug_pred(-0.4, c(5.97,9.28), 0.77, BP=0.92, type=6, dat_uni, dat_pksim, "PK-Sim") %>%
mutate(Drug_class = "Zwitterion")
# Enoxacin
eno <- drug_pred(0.1, c(6.1,8.7), 0.66, BP=0.94, type=6, dat_uni, dat_pksim, "PK-Sim") %>%
mutate(Drug_class = "Zwitterion")
# Bind all the outputs together
drug_all_pksim <- rbind(met,ace,vori,alp,thio,phen,dig,etho,oflo,eno)
# Calculate the Pearson correlation coefficient
corr_coeff_pksim <- round(cor(drug_all_pksim$uni_pred,drug_all_pksim$pred,method='pearson'), digits=2)
corr_coeff_pksim <- paste("italic(r) %~~%", corr_coeff_pksim)
fig4e <- ggplot() +
geom_point(data=drug_all_pksim, aes(x=uni_pred, y=pred, shape=Drug_class), size=3) +
scale_shape_discrete(solid=F) +
geom_abline(intercept = 0, slope = 1) +
xlim(0,max(drug_all_pksim[1:2])) +
ylim(0,max(drug_all_pksim[1:2])) +
xlab("Predicted Kp (unified tissue composition)") +
ylab("Predicted Kp (reported tissue composition)") +
ggtitle("e   PK-Sim") +
theme(legend.title =  element_blank()) +
th1 +
geom_text(aes(x=max(drug_all_pksim[1:2])*pcc_x, y=max(drug_all_pksim[1:2])*pcc_y, label=corr_coeff_pksim), parse=TRUE)
fig4 <- grid.arrange(fig4a, fig4b, fig4c, fig4d, fig4e, ncol=2, nrow=3)
# Calculate Kp values using each method for any drug
kp_pred_comp <- function(logP, pKa, fup, BP, type, dat_uni){
drug_PT <- as.numeric(calcKp_PT(logP, pKa, fup, BP, type, dat_uni))
drug_Berez <- as.numeric(calcKp_Berez(logP, pKa, fup, BP, type, dat_uni))
drug_RR <- as.numeric(calcKp_RR(logP, pKa, fup, BP, type, dat_uni))
drug_Schmitt <- as.numeric(calcKp_Schmitt(logP, pKa, fup, type, dat_uni))
drug_pksim <- as.numeric(calcKp_pksim(logP, fup, dat_uni))
drug_kp_all <- cbind(drug_PT, drug_Berez, drug_RR, drug_Schmitt, drug_pksim)
drug_var <- apply(drug_kp_all, 1, var)
drug_kp_all <- round(cbind(drug_kp_all, drug_var), digits=3)
rownames(drug_kp_all) <- c("Adipose","Bone","Brain","Heart","Kidney","Gut","Liver","Lung","Muscle","Skin","Spleen")
drug_PT_new <- drug_PT %>%
as.data.frame() %>%
mutate(Method="PT") %>%
mutate(Tissue=c(1:11))
drug_Berez_new <- drug_Berez %>%
as.data.frame() %>%
mutate(Method="Berez") %>%
mutate(Tissue=c(1:11))
drug_RR_new <- drug_RR %>%
as.data.frame() %>%
mutate(Method="RR") %>%
mutate(Tissue=c(1:11))
drug_Schmitt_new <- drug_Schmitt %>%
as.data.frame() %>%
mutate(Method="Schmitt") %>%
mutate(Tissue=c(1:11))
drug_pksim_new <- drug_pksim %>%
as.data.frame() %>%
mutate(Method="PK-Sim") %>%
mutate(Tissue=c(1:11))
drug_kp <- rbind(drug_PT_new,drug_Berez_new,drug_RR_new,drug_Schmitt_new,drug_pksim_new)
names(drug_kp)[1] <- "Kp"
return(drug_kp)
}
# Calculate Kp values using each method for any drug
kp_pred_comp <- function(logP, pKa, fup, BP, type, dat_uni){
drug_PT <- as.numeric(calcKp_PT(logP, pKa, fup, BP, type, dat_uni))
drug_Berez <- as.numeric(calcKp_Berez(logP, pKa, fup, BP, type, dat_uni))
drug_RR <- as.numeric(calcKp_RR(logP, pKa, fup, BP, type, dat_uni))
drug_Schmitt <- as.numeric(calcKp_Schmitt(logP, pKa, fup, type, dat_uni))
drug_pksim <- as.numeric(calcKp_pksim(logP, fup, dat_uni))
drug_kp_all <- cbind(drug_PT, drug_Berez, drug_RR, drug_Schmitt, drug_pksim)
drug_var <- apply(drug_kp_all, 1, var)
drug_kp_all <- round(cbind(drug_kp_all, drug_var), digits=3)
rownames(drug_kp_all) <- c("Adipose","Bone","Brain","Heart","Kidney","Gut","Liver","Lung","Muscle","Skin","Spleen")
drug_PT_new <- drug_PT %>%
as.data.frame() %>%
mutate(Method="PT") %>%
mutate(Tissue=c(1:11))
drug_Berez_new <- drug_Berez %>%
as.data.frame() %>%
mutate(Method="Berez") %>%
mutate(Tissue=c(1:11))
drug_RR_new <- drug_RR %>%
as.data.frame() %>%
mutate(Method="RR") %>%
mutate(Tissue=c(1:11))
drug_Schmitt_new <- drug_Schmitt %>%
as.data.frame() %>%
mutate(Method="Schmitt") %>%
mutate(Tissue=c(1:11))
drug_pksim_new <- drug_pksim %>%
as.data.frame() %>%
mutate(Method="PK-Sim") %>%
mutate(Tissue=c(1:11))
drug_kp <- rbind(drug_PT_new,drug_Berez_new,drug_RR_new,drug_Schmitt_new,drug_pksim_new)
names(drug_kp)[1] <- "Kp"
return(drug_kp)
}
### Strong Bases ###
# Metoprolol
met_kp <- kp_pred_comp(2.15, 9.7, 0.8, BP=1.52, type=3, dat_uni)
fig5_met <- ggplot(data=met_kp, aes(x=Tissue, y=Kp)) +
geom_point(data=met_kp, aes(x=Tissue, y=Kp, shape=Method),size=2.5, stroke=0.5) +
scale_x_continuous(breaks=c(1,2,3,4,5,6,7,8,9,10,11),labels = c("Adipose","Bone","Brain","Heart","Kidney","Gut","Liver","Lung","Muscle","Skin","Spleen")) +
ylim(0,max(met_kp$Kp)) +
xlab("Tissue") +
ylab("Predicted Kp") +
ggtitle("a    Metoprolol") +
scale_shape_manual("", values=c(0,2,3,4,5,8)) +
stat_summary(fun.y = median, fun.ymin = median, fun.ymax = median,
geom = "crossbar", width = 0.5, fatten=0.1) +
th5
fig5_met
######################################################################################################
######################################### Metoprolol - strong base ###################################
######################################################################################################
# Reference: https://bpspubs.onlinelibrary.wiley.com/doi/abs/10.1111/j.1365-2125.2012.04363.x
# Compile model
mod <- mread("../model/metoprololPBPK_Adult")
library(mrgsolve)
######################################################################################################
######################################### Metoprolol - strong base ###################################
######################################################################################################
# Reference: https://bpspubs.onlinelibrary.wiley.com/doi/abs/10.1111/j.1365-2125.2012.04363.x
# Compile model
mod <- mread("../model/metoprololPBPK_Adult")
### Strong bases ###
# Metoprolol
source("PBPK_sim_metoprolol.R")
?xcrun
#########################################################################################################
######################################### Voriconazole - weak base ######################################
#########################################################################################################
# Reference: https://link.springer.com/article/10.1007%2Fs40262-014-0181-y
# Compile model
mod <- mread("../model/voriPBPK_Adult")
install.packages("mrgsolve")
install.packages("mrgsolve")
install.packages("mrgsolve")
install.packages("mrgsolve")
######################################################################################################
######################################### Metoprolol - strong base ###################################
######################################################################################################
# Reference: https://bpspubs.onlinelibrary.wiley.com/doi/abs/10.1111/j.1365-2125.2012.04363.x
# Compile model
mod <- mread("../model/metoprololPBPK_Adult")
# Load libraries
.libPaths("lib")
library(dplyr)
library(ggplot2)
library(mrgsolve)
# This script reproduces manuscript figures
# Clear environment
rm(list=ls())
# Load libraries
.libPaths("lib")
library(dplyr)
######################################################################################################
######################################### Metoprolol - strong base ###################################
######################################################################################################
# Reference: https://bpspubs.onlinelibrary.wiley.com/doi/abs/10.1111/j.1365-2125.2012.04363.x
# Compile model
mod <- mread("../model/metoprololPBPK_Adult")
?mread
library(kableExtra)
library(gridExtra)
library(PKNCA)
# Load libraries
.libPaths("lib")
library(dplyr)
install.packages("rlang")
install.packages("rlang")
# This script reproduces manuscript figures
# Clear environment
rm(list=ls())
# Load libraries
.libPaths("lib")
library(dplyr)
